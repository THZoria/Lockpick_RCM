name: Auto Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: devkitpro/devkitarm:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install native build tools (gcc/make)
        run: |
          apt-get update
          apt-get install -y build-essential

      - name: Extract version from Version.inc
        id: version
        run: |
          major=$(grep 'LPVERSION_MAJOR' Version.inc | cut -d:= -f2 | tr -d ' ')
          minor=$(grep 'LPVERSION_MINOR' Version.inc | cut -d:= -f2 | tr -d ' ')
          bugfx=$(grep 'LPVERSION_BUGFX' Version.inc | cut -d:= -f2 | tr -d ' ')
          version="$major.$minor.$bugfx"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Build the project
        run: make

      - name: Check and create tag if needed
        id: tagcheck
        run: |
          version=${{ steps.version.outputs.version }}
          if git ls-remote --tags origin | grep -q "refs/tags/$version"; then
            echo "Tag $version already exists."
            echo "should_release=false" >> $GITHUB_OUTPUT
          else
            git config --global user.name "github-actions"
            git config --global user.email "github-actions@github.com"
            git tag "$version"
            git push origin "$version"
            echo "should_release=true" >> $GITHUB_OUTPUT
          fi

      - name: Get latest commit message
        id: changelog
        run: |
          message=$(git log -1 --pretty=%B)
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$message" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.tagcheck.outputs.should_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            Changelog:

            ${{ steps.changelog.outputs.message }}
          files: Lockpick_RCM.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload compiled binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Lockpick_RCM-${{ steps.version.outputs.version }}
          path: Lockpick_RCM.bin
